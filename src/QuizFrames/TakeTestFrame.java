/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package QuizFrames;

import Quiz.Pojo.AnswerPojo;
import Quiz.Pojo.AnswerStore;
import Quiz.Pojo.ExamPojo;
import Quiz.Pojo.Performance;
import Quiz.Pojo.QuestionPojo;
import Quiz.Pojo.QuestionStore;
import Quiz.Pojo.UserProfile;
import QuizDAO.PerformanceDAO;
import QuizDAO.QuestionDAO;
import java.awt.event.ActionListener;
import java.sql.SQLException;
import java.util.ArrayList;
import javax.swing.JOptionPane;

/**
 *
 * @author abc
 */
public class TakeTestFrame extends javax.swing.JFrame {

    /**
     * Creates new form TakeTestFrame
     */
    private ExamPojo exam;
    private QuestionStore qstore;
    private AnswerStore astore;
    private int qno,pos=0;
     TimerThread tt= new TimerThread();
    public TakeTestFrame() {
        initComponents();
        btnPrevious.setEnabled(false);
        this.setLocationRelativeTo(null);
        this.setTitle("Quiz App");
        lblHello.setText("Hello "+UserProfile.getUsername());
        qstore=new QuestionStore();
        astore=new AnswerStore();
        qno=1;
        lblQno.setText(lblQno.getText()+qno);
    }
    public TakeTestFrame(ExamPojo exam){
        this();
        System.out.println("hell");
        this.exam=exam;
        lblTitle.setText(exam.getLanguage().toUpperCase()+" PAPER");
        loadQuestions();
        showQuestion();
        
        tt.start();
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        lblHello = new javax.swing.JLabel();
        lblTitle = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtQuestion = new javax.swing.JTextArea();
        lblQno = new javax.swing.JLabel();
        jrOption1 = new javax.swing.JRadioButton();
        jrOption2 = new javax.swing.JRadioButton();
        jrOption3 = new javax.swing.JRadioButton();
        jrOption4 = new javax.swing.JRadioButton();
        btnNext = new javax.swing.JButton();
        btnPrevious = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        btnDone = new javax.swing.JButton();
        lblTimer = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(51, 255, 0));

        lblHello.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        lblHello.setForeground(new java.awt.Color(255, 255, 255));
        lblHello.setText("Good Luck");

        lblTitle.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblTitle.setForeground(new java.awt.Color(51, 0, 255));
        lblTitle.setText("JAVA PAPER");

        txtQuestion.setEditable(false);
        txtQuestion.setColumns(20);
        txtQuestion.setRows(5);
        jScrollPane1.setViewportView(txtQuestion);

        lblQno.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        lblQno.setForeground(new java.awt.Color(51, 0, 255));
        lblQno.setText("Question No:");

        jrOption1.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup1.add(jrOption1);
        jrOption1.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jrOption1.setForeground(new java.awt.Color(51, 0, 255));
        jrOption1.setText("jRadioButton1");

        jrOption2.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup1.add(jrOption2);
        jrOption2.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jrOption2.setForeground(new java.awt.Color(51, 0, 255));
        jrOption2.setText("jRadioButton2");

        jrOption3.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup1.add(jrOption3);
        jrOption3.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jrOption3.setForeground(new java.awt.Color(51, 0, 255));
        jrOption3.setText("jRadioButton3");
        jrOption3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrOption3ActionPerformed(evt);
            }
        });

        jrOption4.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup1.add(jrOption4);
        jrOption4.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jrOption4.setForeground(new java.awt.Color(51, 0, 255));
        jrOption4.setText("jRadioButton4");

        btnNext.setBackground(new java.awt.Color(255, 255, 0));
        btnNext.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnNext.setForeground(new java.awt.Color(51, 0, 255));
        btnNext.setText("Next");
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });

        btnPrevious.setBackground(new java.awt.Color(255, 255, 0));
        btnPrevious.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnPrevious.setForeground(new java.awt.Color(51, 0, 255));
        btnPrevious.setText("Previous");
        btnPrevious.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPreviousActionPerformed(evt);
            }
        });

        btnCancel.setBackground(new java.awt.Color(255, 255, 0));
        btnCancel.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnCancel.setForeground(new java.awt.Color(51, 0, 255));
        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        btnDone.setBackground(new java.awt.Color(255, 255, 0));
        btnDone.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnDone.setForeground(new java.awt.Color(51, 0, 255));
        btnDone.setText("Done");
        btnDone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDoneActionPerformed(evt);
            }
        });

        lblTimer.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblTimer.setForeground(new java.awt.Color(51, 0, 204));

        jLabel1.setIcon(new javax.swing.ImageIcon("D:\\Pics\\Pen paper.png")); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(73, 73, 73)
                                .addComponent(btnNext)
                                .addGap(35, 35, 35)
                                .addComponent(btnPrevious)
                                .addGap(27, 27, 27)
                                .addComponent(btnCancel)
                                .addGap(32, 32, 32)
                                .addComponent(btnDone))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(160, 160, 160)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jrOption3)
                                        .addGap(49, 49, 49)
                                        .addComponent(jrOption4))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jrOption1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jrOption2)))))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(lblHello, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(146, 146, 146)
                                .addComponent(lblTitle)
                                .addGap(57, 57, 57)
                                .addComponent(lblTimer, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(120, 120, 120)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblQno, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 357, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(106, 106, 106))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblTimer, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(1, 1, 1)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 178, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblHello, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addComponent(lblTitle)))
                        .addGap(13, 13, 13)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblQno))
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jrOption1)
                    .addComponent(jrOption2))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jrOption3)
                    .addComponent(jrOption4))
                .addGap(50, 50, 50)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNext)
                    .addComponent(btnPrevious)
                    .addComponent(btnCancel)
                    .addComponent(btnDone))
                .addGap(32, 32, 32))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed

        String chosenAnswer=getUserAnswer();
        if(chosenAnswer!=null)
        {
            QuestionPojo question=qstore.getQuestion(pos);
            String correctAnswer=question.getCorrectAnswer();
            AnswerPojo newanswer=new AnswerPojo(exam.getExamid(),exam.getLanguage(),qno,chosenAnswer,correctAnswer);
            System.out.println(newanswer);
            AnswerPojo answer=astore.getAnswerByQno(qno);
            if(answer==null)
                astore.addAnswer(newanswer);
            else{
                String prevAnswer=answer.getChosenAnswer();
                if(newanswer.getChosenAnswer().equals(answer.getChosenAnswer())==false)
                {
                    
                    int apos=astore.removeAnswer(answer);
                    astore.setAnswerAt(apos, newanswer);
                }
            }
        }
        pos++;
        if(pos>=qstore.getCount())
            pos=0;
        qno++;
        if(qno>qstore.getCount())
            qno=1;
        lblQno.setText("Question NO: "+qno);
        showQuestion();
        if(qno>exam.getTotalQuestions())
        {
            JOptionPane.showMessageDialog(null,"You have attempted all the questions\nNow Press DONE button to submit the paper", "Submit", JOptionPane.INFORMATION_MESSAGE);
            return;            
        }

    }//GEN-LAST:event_btnNextActionPerformed

    private void btnPreviousActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPreviousActionPerformed
        
        String chosenAnswer=getUserAnswer();
        if(chosenAnswer!=null)
        {
            QuestionPojo question=qstore.getQuestionByQno(pos);
            String correctAnswer=question.getCorrectAnswer();
            AnswerPojo newanswer=new AnswerPojo(exam.getExamid(),exam.getLanguage(),qno,chosenAnswer,correctAnswer);
            System.out.println(newanswer);
            AnswerPojo answer=astore.getAnswerByQno(qno);
            if(answer==null)
                astore.addAnswer(newanswer);
            else{
                if(newanswer.getChosenAnswer().equals(answer.getChosenAnswer())==false)
                {
                    int apos=astore.removeAnswer(answer);
                    astore.setAnswerAt(apos, newanswer);
                }
            }
        }
        pos--;
        if(pos<0)
            pos=qstore.getCount()-1;
        qno--;
        if(qno<=0)
            qno=qstore.getCount();
        lblQno.setText("Question NO: "+qno);
        showQuestion();
    }//GEN-LAST:event_btnPreviousActionPerformed

    private void btnDoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDoneActionPerformed
        
        String userAnswer=getUserAnswer();
        if(userAnswer!=null)
        {
            QuestionPojo question=qstore.getQuestionByQno(qno);
            String correctAnswer=question.getCorrectAnswer();
             AnswerPojo newanswer=new AnswerPojo(exam.getExamid(),exam.getLanguage(),qno,userAnswer,correctAnswer);
            System.out.println(newanswer);
            AnswerPojo answer=astore.getAnswerByQno(qno);
            if(answer==null)
                astore.addAnswer(newanswer);
            else{
                if(newanswer.getChosenAnswer().equals(answer.getChosenAnswer())==false)
                {
                    int apos=astore.removeAnswer(answer);
                    astore.setAnswerAt(apos, newanswer);
                }
                
            }
        }
        int right=0,wrong=0;
        for(QuestionPojo question:qstore.getAllQuestions())
        {
            int qno=question.getQno();
            AnswerPojo answer=astore.getAnswerByQno(qno);
            if(answer==null)
                continue;
            else
            {
                String chosenAnswer1=answer.getChosenAnswer();
                String correctAnswer=answer.getCorrectAnswer();
                if(chosenAnswer1.equals(correctAnswer))
                    ++right;
                else
                    ++wrong;
                    
            }
        }
        String reportCard="Total Questions: "+qstore.getCount();
        reportCard+="\nRight Answers: "+right;
        reportCard+="\nWrong Answers: "+wrong;
        reportCard+="\nUnAttempted :"+(qstore.getCount()-(right+wrong));
        JOptionPane.showMessageDialog(null,reportCard, "Your Result!", JOptionPane.INFORMATION_MESSAGE);
        try
        {
            Performance performance=new Performance(exam.getExamid(),exam.getLanguage(),UserProfile.getUsername(),right,wrong,(qstore.getCount()-(right+wrong)),(double)right/qstore.getCount()*100);
            PerformanceDAO.addPerformance(performance);
            JOptionPane.showMessageDialog(null, "Your performance has been successfully added to the database","Performance Added!", JOptionPane.INFORMATION_MESSAGE);
            PaperSelectionPanel pp=new PaperSelectionPanel();
            pp.setVisible(true);
            this.dispose();
        }
        catch(SQLException ex)
        {
            JOptionPane.showMessageDialog(null, "Error while connecting to the DB!", "Exception", JOptionPane.ERROR_MESSAGE);
            ex.printStackTrace();
        }
        
    }//GEN-LAST:event_btnDoneActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        
        PaperSelectionPanel pp=new PaperSelectionPanel();
            pp.setVisible(true);
            this.dispose();
    }//GEN-LAST:event_btnCancelActionPerformed

    private void jrOption3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrOption3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jrOption3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TakeTestFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TakeTestFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TakeTestFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TakeTestFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TakeTestFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnDone;
    private javax.swing.JButton btnNext;
    private javax.swing.JButton btnPrevious;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton jrOption1;
    private javax.swing.JRadioButton jrOption2;
    private javax.swing.JRadioButton jrOption3;
    private javax.swing.JRadioButton jrOption4;
    private javax.swing.JLabel lblHello;
    private javax.swing.JLabel lblQno;
    private javax.swing.JLabel lblTimer;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTextArea txtQuestion;
    // End of variables declaration//GEN-END:variables
public void loadQuestions()
{
    try{
        ArrayList<QuestionPojo>questionlist=QuestionDAO.getQuestionsByExamId(exam.getExamid());
        for(QuestionPojo obj:questionlist)
            qstore.addQuestion(obj);
        
    }
    catch(SQLException ex)
    {
         JOptionPane.showMessageDialog(null, "Error while connecting to the DB!","Exception",JOptionPane.ERROR_MESSAGE);
            ex.printStackTrace();
    }
    
}
public void showQuestion()
{
    QuestionPojo question=qstore.getQuestion(pos);
    buttonGroup1.clearSelection();
    txtQuestion.setText(question.getQuestion());
    jrOption1.setText(question.getAnswer1());
    jrOption2.setText(question.getAnswer2());
    jrOption3.setText(question.getAnswer3());
    jrOption4.setText(question.getAnswer4());
    AnswerPojo answer=astore.getAnswerByQno(qno);
    if(answer==null)
        return;
    String chosenAnswer=answer.getChosenAnswer();
    switch(chosenAnswer)
    {
        case "Answer 1":
            jrOption1.setSelected(true);
            break;
         
        case "Answer 2":
            jrOption2.setSelected(true);
            break;
            
        case "Answer 3":
            jrOption3.setSelected(true);
            break;
            
            
        case "Answer 4":
            jrOption4.setSelected(true);
            break;
            
        
            
    }
    
}
public String getUserAnswer()
{
    if(jrOption1.isSelected())
        return "Answer 1";
    else if(jrOption2.isSelected())
        return "Answer 2";
     else if(jrOption3.isSelected())
        return "Answer 3";
     else if(jrOption4.isSelected())
        return "Answer 4";
    else
         return null;
}
public class TimerThread extends Thread
{
     public void run()
    {
        int sec=60,min=4;
        try{
        while(sec>=0 && min>=0)
        {
            sec--;
            if(sec==0){
                sec=59;
                min--;
            }
           lblTimer.setText("Time Remaining:-0"+String.valueOf(min)+":"+String.valueOf(sec));
            Thread.sleep(1000);
               
        }
        JOptionPane.showMessageDialog(null,"Your Time for the text has finished!\nNow press the Done Button to submit paper", "Time Up", JOptionPane.INFORMATION_MESSAGE);
        btnNext.setEnabled(false);
        btnCancel.setEnabled(false);
        buttonGroup1.clearSelection();
    }
        catch(InterruptedException ex)
        {
            JOptionPane.showMessageDialog(null, "Thread Error");
        }
    }
}
}
